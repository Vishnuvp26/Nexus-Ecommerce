<%- include("../layout/header") %>
<!-- Navbar -->
<%- include("../layout/navbar") %>

<style>
    .swal2-popup {
        font-family:'Poppins-Regular';
        font-size: 10px;
    }
</style>

<div class="container pb-xl-5 pt-xl-1">
    <div class="row justify-content-center center-div">
        <div class="col-md-6 col-lg-6">
            <div class="formContainer border border-dark py-4">
                <div class="title pb-3 text-center">
                    <h4 class="font-weight-medium">Forgot your password?</h4><br><br>
                </div>

                <!-- Reset password -->
                <form id="loginForm" class="pt-2" action="/send-password-link">
                    <div class="form-group">
                        <label for="district">Enter your email address and we will send you a link to reset your password</label><br>
                        <input type="email" class="input form-control" name="email" id="email" placeholder="Email" required><br>
                        <div id="email-error" class="text-danger d-none">Please enter a valid email address.</div>
                    </div>
                    <button id="submitBtn" type="button" class="btn btn-info rounded-pill w-100 mt-3">Send reset link</button>
                </form>

            </div>  
        </div>
    </div>
</div>
    
<%- include("../layout/footer.ejs") %>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script>
    // Frontend validation and submission handling
    document.addEventListener('DOMContentLoaded', () => {
        const form = document.getElementById('loginForm');
        const submitBtn = document.getElementById('submitBtn');
        const emailInput = document.getElementById('email');
        const emailError = document.getElementById('email-error');

        submitBtn.addEventListener('click', async () => {
            const email = emailInput.value.trim();

            // Validate email using regex
            const emailRegex = /^[a-zA-Z][a-zA-Z0-9._%+-]*@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
            if (!emailRegex.test(email)) {
                emailInput.classList.add('is-invalid');
                emailError.classList.remove('d-none');
                return;
            } else {
                emailInput.classList.remove('is-invalid');
                emailError.classList.add('d-none');
            }

            try {
                const response = await fetch('/send-password-link', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ email }),
                });

                const data = await response.json();
                if (response.ok) {
                    Swal.fire({
                        title: 'Email Sent',
                        text: data.message,
                    }).then(() => {
                        window.location.href = '/login';
                    });
                } else {    
                    Swal.fire({
                        title: 'Oops',
                        text: data.message,
                    });
                }
            } catch (error) {
                console.error('Error:', error);
                Swal.fire({
                    title: 'Server Error',
                    text: 'Failed to send email. Please try again later.',
                });
            }
        });
    });
</script>