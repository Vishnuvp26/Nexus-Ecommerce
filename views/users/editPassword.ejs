<%- include("../layout/header") %>
<!-- Navbar -->
<%- include("../layout/navbar") %>
<!-- css -->
<link rel="stylesheet" href="/css/editPassword.css">

<!-- breadcrumb -->
<div class="container p-t-75">
    <div class="bread-crumb flex-w p-l-25 p-r-15 p-t-30 p-lr-0-lg">
        <a href="/" class="stext-109 cl8 hov-cl1 trans-04">
            Home
            <i class="fa fa-angle-right m-l-9 m-r-10" aria-hidden="true"></i>
        </a>
        <a href="/profile" class="stext-109 cl8 hov-cl1 trans-04">
            Profile
            <i class="fa fa-angle-right m-l-9 m-r-10" aria-hidden="true"></i>
        </a>
        <span class="stext-109 cl4">
            Edit Profile
        </span>
    </div>
</div>

<div class="container mt-lg-4">
    <div id="editPasswordForm">
        <form id="actualEditAddressForm" onsubmit="return false;">
            <div class="form-group">
                <label for="currentPassword">Current Password</label>
                <input type="password" class="form-control" id="currentPassword" name="currentPassword" required>
                <small id="currentPasswordError" class="text-danger"></small>
            </div>
            <div class="form-group">
                <label for="newPassword">New Password</label>
                <input type="password" class="form-control" id="newPassword" name="newPassword" required
                       pattern="^(?! )[A-Za-z0-9!@#$%^&*()_+]{4,}$"
                       title="Password must be at least 4 characters long and should not start with space or contain symbols">
                <small id="newPasswordError" class="text-danger"></small>   
            </div>
            <div class="form-group">
                <label for="confirmPassword">Confirm Password</label>
                <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required>
                <small id="confirmPasswordError" class="text-danger"></small>
                <small id="errorMessage" class="text-danger"></small>
            </div>            
            <div class="form-group form-check" style="display: flex; align-items: center;">
                <input type="checkbox" class="form-check-input" id="showPasswords" onclick="togglePasswordVisibility()" style="margin-left: 5px;">
                <label class="form-check-label" for="showPasswords" style="margin-left: 10px;">Show Password</label>
            </div>
            <div class="pt-2">
                <button type="button" class="btn btn-primary" onclick="submitForm()">Update Password</button>
                <button type="button" class="btn btn-secondary ml-2" onclick="window.location.href='/profile'">Cancel</button>
            </div>
        </form>
    </div>
</div>

<%- include("../layout/footer.ejs") %>

<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>
    function togglePasswordVisibility() {
        var currentPassword = document.getElementById('currentPassword');
        var newPassword = document.getElementById('newPassword');
        var confirmPassword = document.getElementById('confirmPassword');
        if (currentPassword.type === "password") {
            currentPassword.type = "text";
            newPassword.type = "text";
            confirmPassword.type = "text";
        } else {
            currentPassword.type = "password";
            newPassword.type = "password";
            confirmPassword.type = "password";
        }
    };

    function validatePasswordMatch() {
        var newPassword = document.getElementById('newPassword').value;
        var confirmPassword = document.getElementById('confirmPassword').value;
        var confirmPasswordError = document.getElementById('confirmPasswordError');

        if (newPassword !== confirmPassword) {
            confirmPasswordError.textContent = "Passwords do not match.";
            return false;
        } else {
            confirmPasswordError.textContent = "";
            return true;
        }
    };

    function validateNewPasswordFormat() {
        var newPassword = document.getElementById('newPassword').value;
        var newPasswordError = document.getElementById('newPasswordError');
        var pattern = /^(?! )[A-Za-z0-9!@#$%^&*()_+]{4,}$/;

        if (!pattern.test(newPassword)) {
            newPasswordError.textContent = "Password must be at least 4 characters long and should not start with space or contain symbols";
            return false;
        } else {
            newPasswordError.textContent = "";
            return true;
        }
    }

    async function submitForm() {
        document.getElementById('errorMessage').textContent = '';
        document.getElementById('currentPasswordError').textContent = '';
        document.getElementById('newPasswordError').textContent = '';
        document.getElementById('confirmPasswordError').textContent = '';

        if (!validatePasswordMatch() || !validateNewPasswordFormat()) {
            return;
        }

        try {
            const response = await axios.post('/change-password', {
                currentPassword: document.getElementById('currentPassword').value,
                newPassword: document.getElementById('newPassword').value,
                confirmPassword: document.getElementById('confirmPassword').value
            });

            if (response.data.success) {
    Swal.fire({
        icon: 'success',
        title: 'Success',
        text: 'Password changed successfully!',
    }).then(() => {
        window.location.href = '/profile';
    });
} else {
    if (response.data.message) {
        document.getElementById('errorMessage').textContent = response.data.message;
    }
}

        } catch (error) {
            console.error('Error:', error);
            document.getElementById('errorMessage').textContent = 'Entered old password is wrong.';
        }
    };
</script>
