<%- include("../layout/header") %>
<!-- Navbar -->
<%- include("../layout/navbar") %>

<style>
    .swal2-popup {
        font-family:'Poppins-Regular';
        font-size: 10px;
    }
</style>

<div class="container pb-xl-5 pt-xl-1">
    <div class="row justify-content-center center-div">
        <div class="col-md-6 col-lg-6">
            <div class="formContainer border border-dark py-4">
                <div class="title pb-3 text-center">
                    <h3 class="font-weight-medium">Reset your password</h3><br><br>
                </div>

                <!-- Reset password -->
                <form id="resetForm" action="/reset-password" method="POST">
                    <input type="hidden" name="token" value="<%= token %>">
                    <div class="form-group">
                        <label for="password">New Password</label>
                        <input type="password" name="password" id="password" class="form-control" required>
                        <div id="password-error" class="text-danger d-none">Password must be at least 5 characters long and cannot start with a space or dot.</div>
                    </div>
                    <button id="submitBtn" type="submit" class="btn btn-info rounded-pill w-100 mt-3">Reset Password</button>
                </form>

            </div>  
        </div>
    </div>
</div>
    
<%- include("../layout/footer.ejs") %>

<!-- SweetAlert2 JS -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const form = document.getElementById('resetForm');
        const passwordInput = document.getElementById('password');
        const passwordError = document.getElementById('password-error');

        form.addEventListener('submit', async (event) => {
            event.preventDefault();

            const password = passwordInput.value.trim();

            const passwordRegex = /^(?!\s|\.)[a-zA-Z0-9._%+-]{5,}$/;
            if (!passwordRegex.test(password)) {
                passwordInput.classList.add('is-invalid');
                passwordError.classList.remove('d-none');
                return;
            } else {
                passwordInput.classList.remove('is-invalid');
                passwordError.classList.add('d-none');
            }
    
            try {
                const formData = new FormData(form);
                const response = await fetch('/reset-password', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(Object.fromEntries(formData.entries())),
                });

                const data = await response.json();
                if (response.ok) {
                    Swal.fire({
                        title: 'Password Reset',
                        text: data.message,
                        icon: 'success',
                    }).then(() => {
                        window.location.href = '/login';
                    });
                } else {    
                    Swal.fire({
                        title: 'Oops',
                        text: data.message,
                        icon: 'error',
                    });
                }
            } catch (error) {
                console.error('Error:', error);
                Swal.fire({
                    title: 'Server Error',
                    text: 'Failed to reset password. Please try again later.',
                    icon: 'error',
                });
            }
        });
    });
</script>